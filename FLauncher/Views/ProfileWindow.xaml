<Window x:Class="FLauncher.Views.ProfileWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:b="clr-namespace:FLauncher.ViewModel"
        xmlns:local="clr-namespace:FLauncher.Views" 
        xmlns:cc="clr-namespace:FLauncher.CC"
        mc:Ignorable="d"
        x:Name="mainWindow"
        AllowsTransparency="True"
        Background="Transparent"
        Title="MainWindow" Height="984" Width="1400"
        MinHeight="768" MinWidth="1400"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        FontSize="15">
   

    <Window.Resources>
		<b:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <b:InvitationMultiBoolToVisibilityConverter x:Key="InvitationMultiBoolToVisibilityConverter"/>
		<b:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" />
        <Style x:Key="CircleImageStyle" TargetType="Image">
            <Setter Property="Clip">
                <Setter.Value>
                    <EllipseGeometry RadiusX="20" RadiusY="20" Center="20,20"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid
        Margin="5"
            Effect="{StaticResource BottomShadowEffect}"
        Background="{StaticResource DefaultBackgroundBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="80"/>
            <!--Left Navigation Menu-->
            <ColumnDefinition/>
            <!--Content-->
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <!--Top Navigation Menu-->
            <RowDefinition/>
            <!--Contents-->
        </Grid.RowDefinitions>
        <!--#region Logo-->
        <Grid
            Panel.ZIndex="1"
            Background="{StaticResource PrimaryBrush}"
            Effect="{StaticResource BottomShadowEffect}">
            <Path
                Fill="{StaticResource SecondaryBrush}"
                Height="40"
                Width="40"
                Stretch="Uniform"
                Data="{StaticResource steam_icon}"/>
        </Grid>
        <!--#endregion-->

        <!--#region Top Navigation Menu-->
        <Grid
            Effect="{StaticResource BottomShadowEffect}"
            Background="{StaticResource CanvasBrush}"
            Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!--Polygon header to move window-->
                <RowDefinition/>
                <!--Top Navigation Menu-->
            </Grid.RowDefinitions>

            <!--#region Header-->
            <!--To get the perfect corners on both end we will use triangles on left & right of the row & rectangle in center to fill the gap-->
            <!--Left Corner-->
            <Polygon
                Fill="{StaticResource DimBrush}"
                HorizontalAlignment="Left"
                Margin="40,0,100,0"
                Stretch="Uniform"
                Height="10"
                VerticalAlignment="Top"
                MouseDown="Polygon_MouseDown">
                <!--Drawing points-->
                <Polygon.Points>
                    <!--Starting Point-->
                    <Point X="0" Y="0"/>

                    <!--Diagonal line-->
                    <Point X="4" Y="4"/>

                    <!--Final joint line-->
                    <Point X="4" Y="0"/>
                </Polygon.Points>
            </Polygon>

            <!--Center-->
            <Rectangle
                Fill="{StaticResource DimBrush}"
                Margin="50,0,110,0"
                HorizontalAlignment="Stretch"
                MouseDown="Polygon_MouseDown"/>

            <!--Right Corner-->
            <Polygon
                Fill="{StaticResource DimBrush}"
                HorizontalAlignment="Right"
                Margin="40,0,100,0"
                Stretch="Uniform"
                Height="10"
                VerticalAlignment="Top"
                MouseDown="Polygon_MouseDown">
                <!--Drawing points-->
                <Polygon.Points>
                    <!--Starting Point-->
                    <Point X="0" Y="0"/>

                    <!--Diagonal line-->
                    <Point X="-4" Y="4"/>

                    <!--Final joint line-->
                    <Point X="-4" Y="0"/>
                </Polygon.Points>
            </Polygon>
            <!--Now even if we resize the window the ends won't lose their shape-->
            <!--#endregion-->

            <!--#region Minimize, Maximize, Close Buttons-->
            <StackPanel
                Grid.RowSpan="2"
                Panel.ZIndex="1"
                Orientation="Horizontal"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Margin="8">

                <!--We won't be needing this style anywhere in the application so we are using inside stack panel because its going to be used here only-->
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="Width" Value="25"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate
                                    TargetType="{x:Type Button}">
                                    <Border
                                        Background="{TemplateBinding Background}">
                                        <!--Respective Icon-->
                                        <Path
                                            Data="{Binding Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                                            Fill="{StaticResource SecondaryBrush}"
                                            Height="{TemplateBinding FontSize}"
                                            Width="{TemplateBinding FontSize}"
                                            Stretch="Uniform"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--Since we want our maximize & restore button to change the icon-->
                    <Style x:Key="MaximizeButtonStyle" 
                           TargetType="{x:Type Button}" 
                           BasedOn="{StaticResource {x:Type Button}}">
                        <!--Since we also want to inherit previous style-->
                        <!--Default Icon since the window will be in normal state on startup-->
                        <Setter Property="Content" Value="{StaticResource maximize_icon}"/>

                        <!--Change icon when window is resized-->
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding WindowState, ElementName=mainWindow}" Value="Maximized">
                                <Setter Property="Content" Value="{StaticResource restore_icon}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <Button
                    Name="minimizeButton"
                    FontSize="12"
                    Content="{StaticResource minimize_icon}"
                    Click="minimizeButton_Click"/>
                <Button
                    Name="maximizeButton"
                    FontSize="12"
                    Style="{StaticResource MaximizeButtonStyle}"
                    Click="maximizeButton_Click"/>
                <Button
                    Name="closeButton"
                    FontSize="12"
                    Content="{StaticResource close_icon}"
                    Click="closeButton_Click"/>
            </StackPanel>
            <!--#endregion-->

            <!--#region Navigation-->
            <Grid
                Grid.Row="1">

                <!--#region Menu-->
                <!--
                <StackPanel
                    Orientation="Horizontal"
                    HorizontalAlignment="Left"
                    Margin="40,0">
                    <RadioButton
                        Content="Games"
                        IsChecked="True"
                        Style="{StaticResource TopNavigationStyle}"/>
                    <RadioButton
                        Content="Apps"
                        Style="{StaticResource TopNavigationStyle}"/>
                    <RadioButton
                        Content="Movies"
                        Style="{StaticResource TopNavigationStyle}"/>
                    <RadioButton
                        Content="Music"
                        Style="{StaticResource TopNavigationStyle}"/>
                    <RadioButton
                        Content="Comics"
                        Style="{StaticResource TopNavigationStyle}"/>
                </StackPanel>
                -->
                <!--#endregion-->

                <!--#region SearchBox-->
                <Grid
                    Background="{StaticResource DimBrush}"
                    HorizontalAlignment="Stretch"
                    Height="40"
                    MinWidth="400"
                    Margin="450,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <!--Search Icon-->
                        <ColumnDefinition/>
                        <!--Textbox-->
                    </Grid.ColumnDefinitions>

                    <Path
                        Data="{StaticResource search_icon}"
                        Fill="{StaticResource SecondaryBrush}"
                        Stretch="Uniform"
                        Height="15"
                        Width="15"/>

                    <!--Search text-->
                    <TextBox
                        x:Name="SearchTextBox"
                        Grid.Column="1"
                        Background="Transparent"
                        BorderThickness="0"
                        Foreground="{StaticResource SecondaryBrush}"
                        Text="Search the store"
                        VerticalAlignment="Center"
                        GotFocus="SearchTextBox_GotFocus"
                        LostFocus="SearchTextBox_LostFocus"/>
                </Grid>
                <!--#endregion-->


                <!--#region Profile Name, Player Level, notifications & online Friends-->
                <StackPanel
                Orientation="Horizontal"
                HorizontalAlignment="Right"
                Height="40"
                Margin="40,0">

                    <!--Profile Name & Level-->
                    <Grid
                    VerticalAlignment="Center"
                    Margin="0,0,20,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <!-- Name -->
                            <RowDefinition/>
                            <!-- Money -->
                        </Grid.RowDefinitions>

                        <!-- Gamer's Name -->
                        <TextBlock
        FontWeight="SemiBold"
        Foreground="{StaticResource SecondaryBrush}"
        Text="{Binding Gamer.Name}" />
                        <!-- Binding to Name property of Gamer -->

                        <!-- Gamer's Money -->
                        <TextBlock
        Grid.Row="1"
        FontWeight="SemiBold"
        Foreground="{StaticResource PrimaryBrush}"
        Text="{Binding Gamer.Money, StringFormat=C}" />
                        <!-- Bind to Money property and format as currency -->
                    </Grid>

                    <!--Notifications Icon With Count-->
                    <StackPanel
    Orientation="Horizontal"
    VerticalAlignment="Bottom"
    Margin="0,0,20,0">
                        <Path
        Data="{StaticResource notification_icon}"
        Fill="{StaticResource PrimaryBrush}"
        VerticalAlignment="Bottom"
        Stretch="Uniform"
        Width="16"/>

                        <!-- Count -->
                        <Grid
        VerticalAlignment="Top"
        Margin="-8,0,0,15">
                            <Ellipse
            Fill="{StaticResource TertiaryBrush}"
            StrokeThickness="1"
            Stroke="{StaticResource CanvasBrush}"
            Height="15"
            Width="15"/>

                            <!-- Notification Count -->
                            <TextBlock
            FontSize="8"
            Foreground="{StaticResource SecondaryBrush}"
            Margin="0,0,0,.5"
            HorizontalAlignment="Center"
            Text="{Binding UnreadNotificationCount}" />
                            <!-- Binding the unread notification count -->
                        </Grid>
                    </StackPanel>

                    <!--Friends Icon and Count-->
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                        <Path
        Data="{StaticResource friends_icon}"
        Fill="{StaticResource PrimaryBrush}"
        Margin="5,0"
        Stretch="Uniform"
        Height="16"/>

                        <!-- Count for Friend Invitations -->
                        <TextBlock
        Text="{Binding FriendInvitationCount}"
        Foreground="{StaticResource SecondaryBrush}"
        FontWeight="SemiBold"
        VerticalAlignment="Center"/>
                    </StackPanel>
                </StackPanel>
                <!--#endregion-->
            </Grid>
            <!--#endregion-->
        </Grid>
        <!--#endregion-->

        <!--#region Left Navigation Menu-->
        <Grid
            Background="{StaticResource CanvasBrush}"
            Grid.Row="1"
            Effect="{StaticResource RightShadowEffect}">
            <!--Menu Buttons-->
            <ListBox
                Background="Transparent"
                BorderThickness="0">
                <ListBox.Resources>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Height" Value="80"/>
                        <Setter Property="Width" Value="80"/>
                        <Setter Property="Margin" Value="-1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid Background="{TemplateBinding Background}">

                                        <!--Indicator for selected Item-->
                                        <Rectangle
                                            x:Name="indicator"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Stretch"
                                            Width="4"/>

                                        <!--Menu Icon-->
                                        <Path
                                            x:Name="icon"
                                            Data="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"
                                            Fill="{StaticResource SecondaryBrush}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <!--Set the fill for indicator when listboxitem is selected-->
                                            <Setter
                                                TargetName="indicator"
                                                Property="Fill"
                                                Value="{StaticResource PrimaryBrush}"/>

                                            <!--Set the fill for icon when listboxitem is selected-->
                                            <Setter
                                                TargetName="icon"
                                                Property="Fill"
                                                Value="{StaticResource PrimaryBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Resources>
                <ListBoxItem
                    Content="{StaticResource home_icon}"
                    MouseLeftButtonUp="Home_Click"/>
                <ListBoxItem
                    Content="{StaticResource games_icon}"/>
                <ListBoxItem
                    Content="{StaticResource profile_icon}"
                    IsSelected="True"/>
                <ListBoxItem
                    Content="{StaticResource message_icon}"
                    MouseLeftButtonUp="messageButton_Click"/>
                <ListBoxItem 
                    Content="{StaticResource logout_icon}"
                    MouseLeftButtonUp="logoutButton_Click"/>

            </ListBox>
        </Grid>
        <!--#endregion-->

        <!--#region Contents-->
        <ScrollViewer
                Grid.Column="1"
                Grid.Row="1"
                HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Hidden">
            <StackPanel
                    Margin="40">

                <!--#region Filters-->

                <!--#endregion-->

                <!--#region Hot & New Title & Cards-->



                <StackPanel
                        Orientation="Horizontal"
                        Margin="0,10,0,0">



                    <!-- User Profile Display Section -->
                    <Grid Grid.Row="1" Margin="20" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <!-- User Profile Display Section -->
                        <StackPanel Grid.Column="0" VerticalAlignment="Top">
                            <!-- Profile Picture -->
                            <Ellipse Width="120" Height="120" HorizontalAlignment="Center" Margin="0,10,0,20">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding AvatarLink}" Stretch="UniformToFill"/>
                                </Ellipse.Fill>
                            </Ellipse>

                            <!-- Username-->
                            <TextBlock Text="{Binding Name}" FontSize="24" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"/>
                            

                            <!-- Profile Stats -->
                            <Grid Margin="0,10,0,10" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Friends Count -->
                                <StackPanel Grid.Column="0" HorizontalAlignment="Center" Margin="10">
                                    <TextBlock Text="Friends" FontSize="14" Foreground="Gray" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding FriendCount}" FontSize="18" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <!-- Games Owned -->
                                <StackPanel Grid.Column="1" HorizontalAlignment="Center" Margin="10">
                                    <TextBlock Text="Games Owned" FontSize="14" Foreground="Gray" HorizontalAlignment="Center"/>
                                    <TextBlock Text="30" FontSize="18" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <!-- Achievements -->
                                <StackPanel Grid.Column="2" HorizontalAlignment="Center" Margin="10">
                                    <TextBlock Text="Achievements" FontSize="14" Foreground="Gray" HorizontalAlignment="Center"/>
                                    <TextBlock Text="245" FontSize="18" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </Grid>

                            <!-- Bio or Description -->
                            <TextBlock Text="Welcome to your profile! Here you can view your game stats, friends, and achievements." 
                       FontSize="14" Foreground="White" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="0,10,0,20" TextAlignment="Center"/>
                        </StackPanel>

                        <!-- Button Section -->
                        <StackPanel Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,20,0,0" Width="689">
                            <!-- Add Friend Button -->
                            <Button Content="Add Friend" Width="120" Height="40" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,10"
        Background="Green" Foreground="White" FontWeight="Bold" BorderBrush="Transparent" Click="AddFriendButton_Click">
                                <Button.Visibility>
                                    <MultiBinding Converter="{StaticResource InvitationMultiBoolToVisibilityConverter}">
                                        <Binding Path="IsFriend" />
                                        <Binding Path="IsCurrentUser" />
                                        <MultiBinding.ConverterParameter>FalseTrue</MultiBinding.ConverterParameter>
                                    </MultiBinding>
                                </Button.Visibility>
                            </Button>
                            <!-- Re-add Friend Button -->
                            <Button Content="Re-add Friend" Width="120" Height="40" HorizontalAlignment="Center" VerticalAlignment="Top" 
        Margin="0,10,0,10" Background="Orange" Foreground="White" FontWeight="Bold" Click="ReAddFriendButton_Click">
                                <Button.Visibility>
                                    <MultiBinding Converter="{StaticResource InvitationMultiBoolToVisibilityConverter}">
                                        <Binding Path="IsFriend" />
                                        <Binding Path="IsCurrentUser" />
                                        <MultiBinding.ConverterParameter>FalseFalse</MultiBinding.ConverterParameter>
                                    </MultiBinding>
                                </Button.Visibility>
                            </Button>


                            <!-- Invitation Button -->
                            <Button Content="Invitation" Width="120" Height="40" HorizontalAlignment="Center" VerticalAlignment="Top" 
        Margin="0,10,0,0" Background="Blue" Foreground="White" FontWeight="Bold" 
        BorderBrush="Transparent" Click="InvitationButton_Click">
                                <Button.Visibility>
                                    <MultiBinding Converter="{StaticResource InvitationMultiBoolToVisibilityConverter}">
                                        <Binding Path="IsFriend" />
                                        <Binding Path="IsCurrentUser" />
                                        <MultiBinding.ConverterParameter>FalseTrue</MultiBinding.ConverterParameter>
                                    </MultiBinding>
                                </Button.Visibility>
                            </Button>


                            <!-- Invitations List -->
                            <ListBox x:Name="InvitationsListBox" Visibility="Collapsed" Margin="20">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock Text="{Binding RequestId}" FontWeight="Bold"/>
                                            <TextBlock Text="Invitation Pending"/>
                                            <Button Content="Accept" Width="80" Click="AcceptButton_Click"/>
                                            <Button Content="Deny" Width="80" Click="DenyButton_Click"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>


                            <!-- Unfriend Button -->
                            <Button Content="Unfriend" Width="120" Height="40" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,10"
        Background="Red" Foreground="White" FontWeight="Bold" Click="UnfriendButton_Click">
                                <Button.Visibility>
                                    <MultiBinding Converter="{StaticResource InvitationMultiBoolToVisibilityConverter}">
                                        <Binding Path="IsFriend" />
                                        <Binding Path="IsCurrentUser" />
                                        <MultiBinding.ConverterParameter>TrueFalse</MultiBinding.ConverterParameter>
                                    </MultiBinding>
                                </Button.Visibility>
                            </Button>

                            <!-- Chat Box Button -->
                            <Button Content="Chat Box" Width="120" Height="40" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0"
        Background="Purple" Foreground="White" FontWeight="Bold">
                                <Button.Visibility>
                                    <MultiBinding Converter="{StaticResource InvitationMultiBoolToVisibilityConverter}">
                                        <Binding Path="IsFriend" />
                                        <Binding Path="IsCurrentUser" />
                                        <MultiBinding.ConverterParameter>TrueFalse</MultiBinding.ConverterParameter>
                                    </MultiBinding>
                                </Button.Visibility>
                            </Button>

                        </StackPanel>
                    </Grid>


                </StackPanel>
                <!--#endregion-->

                <!--#region Hot & New Title & Cards-->
                <!--Title-->
                <Grid
                        Margin="0,20,0,0"/>
                <!--Cards-->
                <!--#region Contents-->
                <ScrollViewer
        Grid.Column="1"
        Grid.Row="1"
        HorizontalScrollBarVisibility="Disabled"
        VerticalScrollBarVisibility="Hidden">
                    <StackPanel
            Margin="40">

                        <!--Title-->
                        <Grid
                Margin="0,20,0,0"/>

                        <!-- Sections: Recent Activity, Achievement, Friend -->
                        <Grid Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="2*"/>
                            </Grid.RowDefinitions>

                            <!-- Recent Activity Section (Left Column) -->
                            <StackPanel Grid.Column="0" Margin="10">
                                <TextBlock
                        Text="Recent Activity"
                        FontSize="18"
                        FontWeight="SemiBold"
                        Foreground="{StaticResource SecondaryBrush}"/>
                                <ItemsControl ItemsSource="{Binding RecentActivities}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <!-- Customize this DataTemplate to display each activity -->
                                            <TextBlock Text="{Binding ActivityDescription}" Margin="5,2"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>

                            <!-- Right Column containing Achievement (Top) and Friend (Bottom) -->
                            <Grid Grid.Column="1" Margin="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- Achievement Section -->
                                <StackPanel Grid.Row="0" Margin="10">
                                    <TextBlock
                            Text="Achievements"
                            FontSize="18"
                            FontWeight="SemiBold"
                            Foreground="{StaticResource SecondaryBrush}"/>
                                    <ItemsControl ItemsSource="{Binding Achievements}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <!-- Customize this DataTemplate to display each achievement -->
                                                <TextBlock Text="{Binding AchievementTitle}" Margin="5,2"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>

                                <!-- Friend Section -->
                                <StackPanel Grid.Row="1" Margin="10">
                                    <StackPanel.Visibility>
                                        <Binding Path="IsGamer" Converter="{StaticResource BoolToVisibilityConverter}" />
                                    </StackPanel.Visibility>

                                    <TextBlock
        Text="Friends"
        FontSize="18"
        FontWeight="SemiBold"
        Foreground="{StaticResource SecondaryBrush}" />

									<ListBox ItemsSource="{Binding ListFriend}" SelectedItem="{Binding SelectedFriend}">
										<ListBox.ItemTemplate>
											<DataTemplate>
												<StackPanel Orientation="Horizontal">
													<Image Source="{Binding AvatarLink}" Width="40" Height="40" />
													<TextBlock Text="{Binding Name}" Margin="10,0,0,0" VerticalAlignment="Center" />
													<Button Content="View Profile" Click="OnFriendSelected" Margin="10,0,0,0" />
												</StackPanel>
											</DataTemplate>
										</ListBox.ItemTemplate>
									</ListBox>

								</StackPanel>


                            </Grid>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
                <!--#endregion-->



            </StackPanel>
        </ScrollViewer>
        <!--#endregion-->



    </Grid>
</Window>